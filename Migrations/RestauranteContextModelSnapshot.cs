// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lab_app_web_servidor_istea.Database;

#nullable disable

namespace lab_app_web_servidor_istea.Migrations
{
    [DbContext(typeof(RestauranteContext))]
    partial class RestauranteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("lab_app_web_servidor_istea.Entities.Comanda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MesaId")
                        .HasColumnType("int");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MesaId");

                    b.ToTable("Comandas");
                });

            modelBuilder.Entity("lab_app_web_servidor_istea.Entities.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdSector")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdSector");

                    b.HasIndex("RolId");

                    b.ToTable("Empleados");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdSector = 0,
                            Nombre = "Enzo Francescoli",
                            Password = "river1",
                            RolId = 0,
                            Usuario = "elenzo"
                        },
                        new
                        {
                            Id = 2,
                            IdSector = 1,
                            Nombre = "Angel Labruna",
                            Password = "river2",
                            RolId = 1,
                            Usuario = "angelito"
                        },
                        new
                        {
                            Id = 3,
                            IdSector = 2,
                            Nombre = "Marcelo Gallardo",
                            Password = "river3",
                            RolId = 2,
                            Usuario = "elmunie"
                        },
                        new
                        {
                            Id = 4,
                            IdSector = 3,
                            Nombre = "Norberto Alonso",
                            Password = "river4",
                            RolId = 3,
                            Usuario = "elbeto"
                        },
                        new
                        {
                            Id = 5,
                            IdSector = 3,
                            Nombre = "Amadeo Carrizo",
                            Password = "river5",
                            RolId = 4,
                            Usuario = "elpulpo"
                        });
                });

            modelBuilder.Entity("lab_app_web_servidor_istea.Entities.EstadosMesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstadosMesas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "ClienteEsperandoPedido"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "ClienteComiendo"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "ClientePagando"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Cerrada"
                        });
                });

            modelBuilder.Entity("lab_app_web_servidor_istea.Entities.EstadosPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstadosPedidos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Pendiente"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "EnPreparacion"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "ListoParaServir"
                        });
                });

            modelBuilder.Entity("lab_app_web_servidor_istea.Entities.Mesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EstadosMesaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EstadosMesaId");

                    b.ToTable("Mesas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EstadosMesaId = 3,
                            Nombre = "Mesa101"
                        },
                        new
                        {
                            Id = 2,
                            EstadosMesaId = 3,
                            Nombre = "Mesa102"
                        },
                        new
                        {
                            Id = 4,
                            EstadosMesaId = 3,
                            Nombre = "Mesa103"
                        },
                        new
                        {
                            Id = 3,
                            EstadosMesaId = 3,
                            Nombre = "Mesa104"
                        },
                        new
                        {
                            Id = 5,
                            EstadosMesaId = 3,
                            Nombre = "Mesa201"
                        },
                        new
                        {
                            Id = 6,
                            EstadosMesaId = 3,
                            Nombre = "Mesa202"
                        },
                        new
                        {
                            Id = 7,
                            EstadosMesaId = 3,
                            Nombre = "Mesa203"
                        },
                        new
                        {
                            Id = 8,
                            EstadosMesaId = 3,
                            Nombre = "Mesa204"
                        });
                });

            modelBuilder.Entity("lab_app_web_servidor_istea.Entities.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("ComandaId")
                        .HasColumnType("int");

                    b.Property<int>("EstadosPedidoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaFinalizacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComandaId");

                    b.HasIndex("EstadosPedidoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("lab_app_web_servidor_istea.Entities.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SectorId")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SectorId");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Hamburguesa Clasica",
                            Precio = 8000m,
                            SectorId = 3,
                            Stock = 100
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Hamburguesa Completa",
                            Precio = 10000m,
                            SectorId = 3,
                            Stock = 200
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Hamburguesa con Hongos",
                            Precio = 12000m,
                            SectorId = 3,
                            Stock = 300
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Hamburguesa Doble Carne Doble Queso",
                            Precio = 12000m,
                            SectorId = 3,
                            Stock = 300
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Hamburguesa BBQ",
                            Precio = 12000m,
                            SectorId = 3,
                            Stock = 100
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "Hamburguesa Vegetariana",
                            Precio = 9000m,
                            SectorId = 3,
                            Stock = 500
                        },
                        new
                        {
                            Id = 7,
                            Descripcion = "Nonthue Kolsch",
                            Precio = 4500m,
                            SectorId = 2,
                            Stock = 10
                        },
                        new
                        {
                            Id = 8,
                            Descripcion = "Nonthue Bitter",
                            Precio = 4500m,
                            SectorId = 2,
                            Stock = 20
                        },
                        new
                        {
                            Id = 9,
                            Descripcion = "Nonthue Ipa",
                            Precio = 4500m,
                            SectorId = 2,
                            Stock = 15
                        },
                        new
                        {
                            Id = 10,
                            Descripcion = "Nonthue Porter",
                            Precio = 4500m,
                            SectorId = 2,
                            Stock = 10
                        },
                        new
                        {
                            Id = 11,
                            Descripcion = "Patagonia Session IPA",
                            Precio = 6000m,
                            SectorId = 2,
                            Stock = 15
                        },
                        new
                        {
                            Id = 12,
                            Descripcion = "Patagonia Vera IPA",
                            Precio = 6000m,
                            SectorId = 2,
                            Stock = 20
                        },
                        new
                        {
                            Id = 13,
                            Descripcion = "La Vaquita Santa Julia",
                            Precio = 16000m,
                            SectorId = 1,
                            Stock = 5
                        },
                        new
                        {
                            Id = 14,
                            Descripcion = "El Zorrito Santa Julia",
                            Precio = 16000m,
                            SectorId = 1,
                            Stock = 5
                        },
                        new
                        {
                            Id = 15,
                            Descripcion = "Bizcocho de Chocolate",
                            Precio = 6000m,
                            SectorId = 4,
                            Stock = 5
                        },
                        new
                        {
                            Id = 16,
                            Descripcion = "Bizcocho de Vainilla",
                            Precio = 6000m,
                            SectorId = 4,
                            Stock = 5
                        });
                });

            modelBuilder.Entity("lab_app_web_servidor_istea.Entities.RegistroEmpleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpleado");

                    b.ToTable("RegistroEmpleado");
                });

            modelBuilder.Entity("lab_app_web_servidor_istea.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Bartender"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Cervecero"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Cocinero"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Mozo"
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Socio"
                        });
                });

            modelBuilder.Entity("lab_app_web_servidor_istea.Entities.Sector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sectores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Barra de tragos y vinos"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Barra de choperas de cerveza artesanal"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Cocina"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Candy Bar"
                        });
                });

            modelBuilder.Entity("lab_app_web_servidor_istea.Entities.Comanda", b =>
                {
                    b.HasOne("lab_app_web_servidor_istea.Entities.Mesa", "Mesa")
                        .WithMany()
                        .HasForeignKey("MesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mesa");
                });

            modelBuilder.Entity("lab_app_web_servidor_istea.Entities.Empleado", b =>
                {
                    b.HasOne("lab_app_web_servidor_istea.Entities.Sector", "Sector")
                        .WithMany()
                        .HasForeignKey("IdSector")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lab_app_web_servidor_istea.Entities.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("lab_app_web_servidor_istea.Entities.Mesa", b =>
                {
                    b.HasOne("lab_app_web_servidor_istea.Entities.EstadosMesa", "EstadosMesa")
                        .WithMany("Mesas")
                        .HasForeignKey("EstadosMesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadosMesa");
                });

            modelBuilder.Entity("lab_app_web_servidor_istea.Entities.Pedido", b =>
                {
                    b.HasOne("lab_app_web_servidor_istea.Entities.Comanda", "Comanda")
                        .WithMany("Pedidos")
                        .HasForeignKey("ComandaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lab_app_web_servidor_istea.Entities.EstadosPedido", "EstadosPedido")
                        .WithMany("Pedidos")
                        .HasForeignKey("EstadosPedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lab_app_web_servidor_istea.Entities.Producto", "Producto")
                        .WithMany("Pedidos")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comanda");

                    b.Navigation("EstadosPedido");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("lab_app_web_servidor_istea.Entities.Producto", b =>
                {
                    b.HasOne("lab_app_web_servidor_istea.Entities.Sector", "Sector")
                        .WithMany()
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("lab_app_web_servidor_istea.Entities.RegistroEmpleado", b =>
                {
                    b.HasOne("lab_app_web_servidor_istea.Entities.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("lab_app_web_servidor_istea.Entities.Comanda", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("lab_app_web_servidor_istea.Entities.EstadosMesa", b =>
                {
                    b.Navigation("Mesas");
                });

            modelBuilder.Entity("lab_app_web_servidor_istea.Entities.EstadosPedido", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("lab_app_web_servidor_istea.Entities.Producto", b =>
                {
                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
